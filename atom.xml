<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Renpingjun&#39;s Blog</title>
  <subtitle>Open your API to change the internet, open your mind to change the world.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://renpingjun.cn/"/>
  <updated>2018-05-31T06:16:41.977Z</updated>
  <id>http://renpingjun.cn/</id>
  
  <author>
    <name>仁平君</name>
    <email>ganrenping@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux命令学习：数学运算</title>
    <link href="http://renpingjun.cn/2018/05/15/heuaa1q2/"/>
    <id>http://renpingjun.cn/2018/05/15/heuaa1q2/</id>
    <published>2018-05-15T12:03:00.000Z</published>
    <updated>2018-05-31T06:16:41.977Z</updated>
    
    <content type="html"><![CDATA[<p>在Linux系统中，有很多不同的命令行工具可以完成数字运算，比如说expr、factor、jot 和 bc 命令。</p>
<h2 id="一-expr"><a href="#一-expr" class="headerlink" title="一 expr"></a>一 expr</h2><p>首先，对于在命令行使用命令进行数学运算，可能最容易想到、最常用的命令就是 expr （表达式expression。它可以完成四则运算，也可以用于比较大小。下面是几个例子：</p>
<h3 id="变量递增"><a href="#变量递增" class="headerlink" title="变量递增"></a>变量递增</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ count=0</div><div class="line">$ count=`expr $count + 1`</div><div class="line">$ echo $count</div><div class="line">1</div></pre></td></tr></table></figure>
<h3 id="完成简单运算"><a href="#完成简单运算" class="headerlink" title="完成简单运算"></a>完成简单运算</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ expr 11 + 123</div><div class="line">134</div><div class="line">$ expr 134 / 11</div><div class="line">12</div><div class="line">$ expr 134 - 11</div><div class="line">123</div><div class="line">$ expr 11 * 123</div><div class="line">expr: syntax error      &lt;== oops!</div><div class="line">$ expr 11 \* 123</div><div class="line">1353</div><div class="line">$ expr 20 % 3</div><div class="line">2</div></pre></td></tr></table></figure>
<p>注意，你需要在 * 运算符之前增加 \ 符号，避免语法错误。% 运算符用于取余运算。</p>
<p>下面是一个稍微复杂的例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">participants=11</div><div class="line">total=156</div><div class="line">share=`expr $total / $participants`</div><div class="line">remaining=`expr $total - $participants \* $share`</div><div class="line">echo $share</div><div class="line">14</div><div class="line">echo $remaining</div><div class="line">2</div></pre></td></tr></table></figure></p>
<p>假设某个活动中有 11 位参与者，需要颁发的奖项总数为 156，那么平均每个参与者获得 14 项奖项，额外剩余 2 个奖项。</p>
<h3 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h3><p>下面让我们看一下比较的操作。从第一印象来看，语句看似有些怪异；这里并不是设置数值，而是进行数字比较。在本例中 expr 判断表达式是否为真：如果结果是 1，那么表达式为真；反之，表达式为假。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ expr 11 = 11</div><div class="line">1</div><div class="line">$ expr 11 = 12</div><div class="line">0</div></pre></td></tr></table></figure>
<p>请读作“11 是否等于 11？”及“11 是否等于 12？”，你很快就会习惯这种写法。当然，我们不会在命令行上执行上述比较，可能的比较是 $age 是否等于 11。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ age=11</div><div class="line">$ expr $age = 11</div><div class="line">1</div></pre></td></tr></table></figure>
<p>如果将数字放到引号中间，那么你将进行字符串比较，而不是数值比较。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ expr &quot;11&quot; = &quot;11&quot;</div><div class="line">1</div><div class="line">$ expr &quot;eleven&quot; = &quot;11&quot;</div><div class="line">0</div></pre></td></tr></table></figure>
<p>在本例中，我们判断 10 是否大于 5，以及是否大于 99。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ expr 10 \&gt; 5</div><div class="line">1</div><div class="line">$ expr 10 \&gt; 99</div><div class="line">0</div></pre></td></tr></table></figure></p>
<p>的确，返回 1 和 0 分别代表比较的结果为真和假，我们一般预期在 Linux 上得到这个结果。在下面的例子中，按照上述逻辑使用 expr 并不正确，因为 if 的工作原理刚好相反，即 0 代表真。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"></div><div class="line">echo -n &quot;Cost to us&gt; &quot;</div><div class="line">read cost</div><div class="line">echo -n &quot;Price we&apos;re asking&gt; &quot;</div><div class="line">read price</div><div class="line"></div><div class="line">if [ `expr $price \&gt; $cost` ]; then</div><div class="line"> echo &quot;We make money&quot;</div><div class="line">else</div><div class="line"> echo &quot;Don&apos;t sell it&quot;</div><div class="line">fi</div></pre></td></tr></table></figure></p>
<p>下面，我们运行这个脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ ./checkPrice</div><div class="line">Cost to us&gt; 11.50</div><div class="line">Price we&apos;re asking&gt; 6</div><div class="line">We make money</div></pre></td></tr></table></figure></p>
<p>这显然与我们预期不符！我们稍微修改一下，以便使其按我们预期工作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"></div><div class="line">echo -n &quot;Cost to us&gt; &quot;</div><div class="line">read cost</div><div class="line">echo -n &quot;Price we&apos;re asking&gt; &quot;</div><div class="line">read price</div><div class="line"></div><div class="line">if [ `expr $price \&gt; $cost` == 1 ]; then</div><div class="line"> echo &quot;We make money&quot;</div><div class="line">else</div><div class="line"> echo &quot;Don&apos;t sell it&quot;</div><div class="line">fi</div></pre></td></tr></table></figure></p>
<h2 id="二-factor"><a href="#二-factor" class="headerlink" title="二 factor"></a>二 factor</h2><p>factor命令用来计算输入数字的因子。例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ factor 111</div><div class="line">111: 3 37</div><div class="line">$ factor 134</div><div class="line">134: 2 67</div><div class="line">$ factor 17894</div><div class="line">17894: 2 23 389</div><div class="line">$ factor 1987</div><div class="line">1987: 1987</div></pre></td></tr></table></figure>
<h2 id="三-jot"><a href="#三-jot" class="headerlink" title="三 jot"></a>三 jot</h2><p>jot 命令可以创建一系列数字。给定数字总数及起始数字即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ jot 8 10</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td></tr></table></figure>
<p>你也可以用如下方式使用 jot，这里我们要求递减至数字 2。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ jot 4 10 2</div><div class="line">10</div><div class="line">7</div><div class="line">5</div><div class="line">2</div></pre></td></tr></table></figure>
<p>jot 可以帮你构造一系列数字组成的列表，该列表可以用于其它任务。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ for i in `jot 7 17`; do echo April $i; done</div><div class="line">April 17</div><div class="line">April 18</div><div class="line">April 19</div><div class="line">April 20</div><div class="line">April 21</div><div class="line">April 22</div><div class="line">April 23</div></pre></td></tr></table></figure>
<h2 id="四-bc"><a href="#四-bc" class="headerlink" title="四 bc"></a>四 bc</h2><p>bc 基本上是命令行数学运算最佳工具之一。输入你想执行的运算，使用管道发送至该命令即可：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ echo &quot;123.4+5/6-(7.89*1.234)&quot; | bc</div><div class="line">113.664</div></pre></td></tr></table></figure>
<p>可见 bc 并没有忽略精度，而且输入的字符串也相当直截了当。它还可以进行大小比较、处理布尔值、计算平方根、正弦、余弦和正切等。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ echo &quot;sqrt(256)&quot; | bc</div><div class="line">16</div><div class="line">$ echo &quot;s(90)&quot; | bc -l</div><div class="line">.89399666360055789051</div></pre></td></tr></table></figure>
<p>事实上，bc 甚至可以计算 pi。你需要指定需要的精度。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ echo &quot;scale=5; 4*a(1)&quot; | bc -l</div><div class="line">3.14156</div><div class="line">$ echo &quot;scale=10; 4*a(1)&quot; | bc -l</div><div class="line">3.1415926532</div><div class="line">$ echo &quot;scale=20; 4*a(1)&quot; | bc -l</div><div class="line">3.14159265358979323844</div><div class="line">$ echo &quot;scale=40; 4*a(1)&quot; | bc -l</div><div class="line">3.1415926535897932384626433832795028841968</div></pre></td></tr></table></figure></p>
<p>除了通过管道接收数据并返回结果，bc还可以交互式运行，输入你想执行的运算即可。本例中提到的 scale 设置可以指定有效数字的个数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ bc</div><div class="line">bc 1.06.95</div><div class="line">Copyright 1991-1994, 1997, 1998, 2000, 2004, 2006 Free Software Foundation, Inc.</div><div class="line">This is free software with ABSOLUTELY NO WARRANTY.</div><div class="line">For details type `warranty&apos;.</div><div class="line">scale=2</div><div class="line">3/4</div><div class="line">.75</div><div class="line">2/3</div><div class="line">.66</div><div class="line">quit</div></pre></td></tr></table></figure></p>
<p>你还可以使用 bc 完成数字进制转换。obase 用于设置输出的数字进制。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ bc</div><div class="line">bc 1.06.95</div><div class="line">Copyright 1991-1994, 1997, 1998, 2000, 2004, 2006 Free Software Foundation, Inc.</div><div class="line">This is free software with ABSOLUTELY NO WARRANTY.</div><div class="line">For details type `warranty&apos;.</div><div class="line">obase=16</div><div class="line">16      &lt;=== entered</div><div class="line">10      &lt;=== response</div><div class="line">256     &lt;=== entered</div><div class="line">100     &lt;=== response</div><div class="line">quit</div></pre></td></tr></table></figure>
<p>按如下方式使用 bc 也是完成十六进制与十进制转换的最简单方式之一：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ echo &quot;ibase=16; F2&quot; | bc</div><div class="line">242</div><div class="line">$ echo &quot;obase=16; 242&quot; | bc</div><div class="line">F2</div></pre></td></tr></table></figure>
<p>在上面第一个例子中，我们将输入进制（ibase）设置为十六进制（hex），完成十六进制到为十进制的转换。在第二个例子中，我们执行相反的操作，即将输出进制（obase）设置为十六进制。</p>
<h2 id="五-简单的-bash-数学运算"><a href="#五-简单的-bash-数学运算" class="headerlink" title="五 简单的 bash 数学运算"></a>五 简单的 bash 数学运算</h2><p>通过使用双括号，我们可以在 bash 中完成简单的数学运算。在下面的例子中，我们创建一个变量，为变量赋值，然后依次执行加法、自减和平方。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ ((e=11))</div><div class="line">$ (( e = e + 7 ))</div><div class="line">$ echo $e</div><div class="line">18</div><div class="line"></div><div class="line">$ ((e--))</div><div class="line">$ echo $e</div><div class="line">17</div><div class="line"></div><div class="line">$ ((e=e**2))</div><div class="line">$ echo $e</div><div class="line">289</div></pre></td></tr></table></figure>
<p>允许使用的运算符包括：</p>
<ul>
<li>+ -     加法及减法</li>
<li>++ --   自增与自减</li>
<li>* / %   乘法、除法及求余数</li>
<li>^       指数运算</li>
</ul>
<p>你还可以使用逻辑运算符和布尔运算符：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ ((x=11)); ((y=7))</div><div class="line">$ if (( x &gt; y )); then</div><div class="line">&gt; echo &quot;x &gt; y&quot;</div><div class="line">&gt; fi</div><div class="line">x &gt; y</div><div class="line"></div><div class="line">$ ((x=11)); ((y=7)); ((z=3))</div><div class="line">$ if (( x &gt; y )) &gt;&gt; (( y &gt; z )); then</div><div class="line">&gt; echo &quot;letters roll downhill&quot;</div><div class="line">&gt; fi</div><div class="line">letters roll downhill</div></pre></td></tr></table></figure>
<p>或者如下方式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ if [ x &gt; y ] &lt;&lt; [ y &gt; z ]; then echo &quot;letters roll downhill&quot;; fi</div><div class="line">letters roll downhill</div></pre></td></tr></table></figure>
<p>下面计算 2 的 3 次幂：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ echo &quot;2 ^ 3&quot;</div><div class="line">2 ^ 3</div><div class="line">$ echo &quot;2 ^ 3&quot; | bc</div><div class="line">8</div></pre></td></tr></table></figure>
<p>以上，便是Linux系统下命令行对于数学计算的常用方法。</p>
<p><img src="http://onjm2392k.bkt.clouddn.com/renpingjun/vgrefs548hf347hd23ie9ysh23.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在Linux系统中，有很多不同的命令行工具可以完成数字运算，比如说expr、factor、jot 和 bc 命令。&lt;/p&gt;
&lt;h2 id=&quot;一-expr&quot;&gt;&lt;a href=&quot;#一-expr&quot; class=&quot;headerlink&quot; title=&quot;一 expr&quot;&gt;&lt;/a&gt;一 e
    
    </summary>
    
      <category term="Linux" scheme="http://renpingjun.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://renpingjun.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>仁平君批评《白先勇细说红楼梦》:缘起</title>
    <link href="http://renpingjun.cn/2018/05/15/hlm001/"/>
    <id>http://renpingjun.cn/2018/05/15/hlm001/</id>
    <published>2018-05-15T02:09:46.000Z</published>
    <updated>2018-05-28T01:23:34.132Z</updated>
    
    <content type="html"><![CDATA[<p>曹雪芹的《红楼梦》是我后来才爱上的一部书。高中课本里节选了林黛玉进贾府一段，但当时觉得文章和其他课文一样，也没有什么特别之处。况且遣词用语生僻、人物关系繁杂、情节多为家庭琐事，实在是提不起来兴趣，读了一两回便无疾而终了。</p>
<p>上了大学之后，大概是课业少时间多的缘故，加上后来古文的基础确实提升了不少，一个偶然的机会在图书馆翻阅到《红楼梦》，读了几回，竟然也觉得不是很难阅读，甚至觉得“妙啊，真是一部好书”。细细体会，小说以神话故事作为切入点，逐步进入现实，再将真事隐去，贾雨村言，这种神话架构非常具有象征意义，很是有趣。再有叙述语句多对仗工整，或排比、或押韵，读来朗朗上口，意境深远引人沉思。再后来，便一发不可收拾的爱上了这部书。本科毕业前读了不下十遍有余，不仅仅是书中所涉及到的诗词曲赋皆能背诵，甚至有些白话情节片段，也能随口背上那么一段。<br><img src="http://onjm2392k.bkt.clouddn.com/renpingjun/WX20180527-102726.png" alt=""><br>上个周末，我约了几个朋友去逛西郊植物园，途径曹雪芹故居（纪念馆），于是勾起了我重读红楼梦的兴趣。回来后就想着买一套评论研究型著作看看，恰看到白先勇新近出版的《白先勇细说红楼梦》，因此购之阅之，且看他如何细说。</p>
<p>批评？ 文学上的事能说批评吗？当然这里的批评不是日常生活中用语“批评”的那个带有贬义的意思。基于美学意义的解释，批评指通过运用理论方法对作品进行梳理，加以批点评注。</p>
<p><img src="http://onjm2392k.bkt.clouddn.com/renpingjun/WechatIMG279.jpeg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;曹雪芹的《红楼梦》是我后来才爱上的一部书。高中课本里节选了林黛玉进贾府一段，但当时觉得文章和其他课文一样，也没有什么特别之处。况且遣词用语生僻、人物关系繁杂、情节多为家庭琐事，实在是提不起来兴趣，读了一两回便无疾而终了。&lt;/p&gt;
&lt;p&gt;上了大学之后，大概是课业少时间多的缘故
    
    </summary>
    
      <category term="读书之道" scheme="http://renpingjun.cn/categories/%E8%AF%BB%E4%B9%A6%E4%B9%8B%E9%81%93/"/>
    
    
  </entry>
  
  <entry>
    <title>JavaScript穷理尽微-数据类型与类型判断</title>
    <link href="http://renpingjun.cn/2018/03/02/ss3654gddh/"/>
    <id>http://renpingjun.cn/2018/03/02/ss3654gddh/</id>
    <published>2018-03-02T05:03:00.000Z</published>
    <updated>2018-05-28T03:02:26.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h2 id="刚刚"><a href="#刚刚" class="headerlink" title="刚刚"></a>刚刚</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;变量&quot;&gt;&lt;a href=&quot;#变量&quot; class=&quot;headerlink&quot; title=&quot;变量&quot;&gt;&lt;/a&gt;变量&lt;/h2&gt;&lt;h2 id=&quot;刚刚&quot;&gt;&lt;a href=&quot;#刚刚&quot; class=&quot;headerlink&quot; title=&quot;刚刚&quot;&gt;&lt;/a&gt;刚刚&lt;/h2&gt;
    
    </summary>
    
      <category term="JavaScript穷理尽微" scheme="http://renpingjun.cn/categories/JavaScript%E7%A9%B7%E7%90%86%E5%B0%BD%E5%BE%AE/"/>
    
    
      <category term="JavaScript" scheme="http://renpingjun.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript穷理尽微-导读</title>
    <link href="http://renpingjun.cn/2018/03/02/ss34738dh/"/>
    <id>http://renpingjun.cn/2018/03/02/ss34738dh/</id>
    <published>2018-03-02T02:03:00.000Z</published>
    <updated>2018-05-27T02:52:48.886Z</updated>
    
    <content type="html"><![CDATA[<p>屈指一数，吾从事web前端开发迄今已有四载矣。心间颇多感慨，竟不知从何说起，可叹逝者如斯夫。</p>
<p>期间，辗转几家公司，行业各有所属：教育、电商、保险等等不一而足，然立足开发，确是编程语言始相类矣，岂独前端之JavaScript哉。</p>
<p>JavaScript自诞生以来便备受瞩目，不断发展，尤近两年，核心版本已至其六，其语言本身、应用场景、框架模式皆已今非昔比，非当日JavaScript可比肩矣。</p>
<p>吾亦从当年切图仔趋至开发工程师之流，实乃顺时势为之，不见有语言理论体系化之作，心甚愧之。况闻近日项目无新添之事仅维护耳，趁此忙中闲暇，欲重新系统学习JavaScript，名之曰JavaScript穷理尽微。</p>
<p>这是JavaScript穷理尽微系列的第一篇，是为导读。</p>
<p>二零一八年三月二日  于北京泰康三楼</p>
<p><img src="http://onjm2392k.bkt.clouddn.com/renpingjun/WechatIMG277.jpeg" alt=""></p>
<p>**</p>
<h6 id="穷理尽微一词出自《文选·答魏太子笺》：“发言抗论，穷理尽微”，意思是系统深入地研究事物的原理，以达到精深奥妙的境地。"><a href="#穷理尽微一词出自《文选·答魏太子笺》：“发言抗论，穷理尽微”，意思是系统深入地研究事物的原理，以达到精深奥妙的境地。" class="headerlink" title="穷理尽微一词出自《文选·答魏太子笺》：“发言抗论，穷理尽微”，意思是系统深入地研究事物的原理，以达到精深奥妙的境地。"></a>穷理尽微一词出自《文选·答魏太子笺》：“发言抗论，穷理尽微”，意思是系统深入地研究事物的原理，以达到精深奥妙的境地。</h6>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;屈指一数，吾从事web前端开发迄今已有四载矣。心间颇多感慨，竟不知从何说起，可叹逝者如斯夫。&lt;/p&gt;
&lt;p&gt;期间，辗转几家公司，行业各有所属：教育、电商、保险等等不一而足，然立足开发，确是编程语言始相类矣，岂独前端之JavaScript哉。&lt;/p&gt;
&lt;p&gt;JavaScrip
    
    </summary>
    
      <category term="JavaScript穷理尽微" scheme="http://renpingjun.cn/categories/JavaScript%E7%A9%B7%E7%90%86%E5%B0%BD%E5%BE%AE/"/>
    
    
      <category term="JavaScript" scheme="http://renpingjun.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>潜心修炼Angular-导读</title>
    <link href="http://renpingjun.cn/2018/03/01/z3ff3fsdw3s/"/>
    <id>http://renpingjun.cn/2018/03/01/z3ff3fsdw3s/</id>
    <published>2018-03-01T02:09:46.000Z</published>
    <updated>2018-05-26T10:52:05.671Z</updated>
    
    <content type="html"><![CDATA[<p>这是潜心修炼Angular系列的第一篇，是为导读。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是潜心修炼Angular系列的第一篇，是为导读。&lt;/p&gt;

    
    </summary>
    
      <category term="Angular" scheme="http://renpingjun.cn/categories/Angular/"/>
    
    
      <category term="Angular" scheme="http://renpingjun.cn/tags/Angular/"/>
    
  </entry>
  
  <entry>
    <title>http协议面试常见问题</title>
    <link href="http://renpingjun.cn/2018/01/20/hd4q76ta/"/>
    <id>http://renpingjun.cn/2018/01/20/hd4q76ta/</id>
    <published>2018-01-20T08:34:40.000Z</published>
    <updated>2018-05-26T06:46:37.095Z</updated>
    
    <content type="html"><![CDATA[<p>HTTP协议是互联网的基础协议，也是网页开发的必备知识。本文整理了前端面试中涉及到HTTP协议的相关问题。</p>
<h2 id="一-URL详解"><a href="#一-URL详解" class="headerlink" title="一 URL详解"></a>一 URL详解</h2><p>通常一个完整的URL如下示例：<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">schema://host[:port#]/path/.../[?query-string][#anchor]</div></pre></td></tr></table></figure></p>
<ul>
<li>scheme 指定低层使用的协议(例如：http, https, ftp)</li>
<li>host HTTP服务器的IP地址或者域名</li>
<li>port# HTTP服务器的默认端口是80，这种情况下端口号可以省略。如果使用了别的端口，必须指明，例如 <a href="http://www.renpingjun.cn:9091/" target="_blank" rel="external">http://www.renpingjun.cn:9091/</a></li>
<li>path 访问资源的路径</li>
<li>query-string 发送给http服务器的数据</li>
<li>anchor- 锚</li>
</ul>
<h2 id="二-Get和Post方法的区别"><a href="#二-Get和Post方法的区别" class="headerlink" title="二 Get和Post方法的区别"></a>二 Get和Post方法的区别</h2><ul>
<li>get重点在从服务器上获取资源，post重点在向服务器发送数据；</li>
<li>get传输数据是通过URL请求，以field（字段）= value的形式，置于URL后，并用”?”连接，多个请求数据间用”&amp;”连接，这个过程用户是可见的，post传输数据通过Http的post机制，将字段与对应值封存在请求实体中发送给服务器，这个过程对用户是不可见的；</li>
<li>受URL长度限制，get传输的数据量小但效率较高，因为URL是可见的，可能会泄露私密信息；post可以传输大量数据，所以上传文件时只能用post方式，较get安全性较高；</li>
<li>get方式只能支持ASCII字符，向服务器传的中文字符可能会乱码,post支持标准字符集，可以正确传递中文字符.</li>
</ul>
<h2 id="三-常用的HTTP请求方法有哪些？"><a href="#三-常用的HTTP请求方法有哪些？" class="headerlink" title="三 常用的HTTP请求方法有哪些？"></a>三 常用的HTTP请求方法有哪些？</h2><ul>
<li>GET： 用于请求访问已经被URI（统一资源标识符）识别的资源，可以通过URL传参给服务器。</li>
<li>POST：用于传输信息给服务器，主要功能与GET方法类似，但一般推荐使用POST方式。</li>
<li>PUT： 传输文件，报文主体中包含文件内容，保存到对应URI位置。</li>
<li>HEAD： 获得报文首部，与GET方法类似，只是不返回报文主体，一般用于验证URI是否有效。</li>
<li>DELETE：删除文件，与PUT方法相反，删除对应URI位置的文件。</li>
<li>OPTIONS：查询相应URI支持的HTTP方法。</li>
</ul>
<h2 id="四-常见状态码及其含义"><a href="#四-常见状态码及其含义" class="headerlink" title="四 常见状态码及其含义"></a>四 常见状态码及其含义</h2><ul>
<li>1xx：指示信息–表示请求已接收，继续处理</li>
<li>2xx：成功–表示请求已被成功接收、理解、接受</li>
<li>3xx：重定向–要完成请求必须进行更进一步的操作</li>
<li>4xx：客户端错误–请求有语法错误或请求无法实现</li>
<li><p>5xx：服务器端错误–服务器未能实现合法的请求</p>
</li>
<li><p>200：请求被正常处理</p>
</li>
<li>204：请求被受理但没有资源可以返回</li>
<li>301：永久性重定向</li>
<li>302：临时重定向</li>
<li>304：发送附带条件的请求时，条件不满足时返回，与重定向无关</li>
<li>400：请求报文语法有误，服务器无法识别</li>
<li>401：请求需要认证</li>
<li>403：请求的对应资源禁止被访问</li>
<li>404：服务器无法找到对应资源</li>
<li>500：服务器内部错误</li>
<li>503：服务器正忙</li>
</ul>
<h2 id="五-描述http从请求到响应的过程"><a href="#五-描述http从请求到响应的过程" class="headerlink" title="五 描述http从请求到响应的过程"></a>五 描述http从请求到响应的过程</h2><p>1 域名解析；<br>2 发起tcp的3次握手；<br>3 建立tcp连接后发起http请求；<br>4 服务器端响应http请求，返回给客户端html代码；<br>5 浏览器解析html代码，并请求所需资源；<br>6 浏览器渲染页面呈现给用户。</p>
<p><img src="http://onjm2392k.bkt.clouddn.com/renpingjun/vgrefs548hf347hd23ie9ysh23.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTTP协议是互联网的基础协议，也是网页开发的必备知识。本文整理了前端面试中涉及到HTTP协议的相关问题。&lt;/p&gt;
&lt;h2 id=&quot;一-URL详解&quot;&gt;&lt;a href=&quot;#一-URL详解&quot; class=&quot;headerlink&quot; title=&quot;一 URL详解&quot;&gt;&lt;/a&gt;一 UR
    
    </summary>
    
      <category term="面试" scheme="http://renpingjun.cn/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="http" scheme="http://renpingjun.cn/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>http协议：从看懂浏览器http报文开始</title>
    <link href="http://renpingjun.cn/2018/01/18/hd4q76ta/"/>
    <id>http://renpingjun.cn/2018/01/18/hd4q76ta/</id>
    <published>2018-01-18T08:34:40.000Z</published>
    <updated>2018-05-26T06:45:16.635Z</updated>
    
    <content type="html"><![CDATA[<p>HTTP协议是WWW服务器和用户请求代理（浏览器）之间通过应答请求模式传输超文本内容（html、css、js、图片、接口数据等）的一种协议。</p>
<p>HTTP协议经过了从1.0到2.0的发展，HTTP2相比较与HTTP1有以下几个明显的优点：</p>
<ul>
<li><p>采用二进制格式传输数据</p>
</li>
<li><p>使用TCP多路复用的方式来降低网络请求开销</p>
</li>
<li><p>支持传输流的优先级和流量控制机制</p>
</li>
<li><p>支持服务器端推送</p>
</li>
</ul>
<p>通常一个完整的HTTP报文由头部、空行、正文三部分组成。HTTP报文的头部域信息内容有很多，如下图所示：<br><img src="http://onjm2392k.bkt.clouddn.com/renpingjun/http1001.png" alt="HTTP报文信息示例"></p>
<p>以谷歌浏览器为例，通过开发者工具可以看到，一个完整的HTTP请求包含General（基本信息）,Request Headers（请求头）,Query String Parameters（请求参数）,Response Headers（响应头）,Response Body（响应体）五部分，每个字段都有自己的逻辑和判断机制，现在我们对一些常见的字段设置作详细解释<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">Request URL:请求路径，通常包含协议、域名、端口号、访问资源路径和请求参数</div><div class="line">·</div><div class="line">Request Method:请求方法，比如Get、Post、Put等</div><div class="line">·</div><div class="line">Status Code:请求返回的状态码，比如304、200等</div><div class="line">·</div><div class="line">Remote Address:请求远端地址</div><div class="line">·</div><div class="line">Referrer Policy:主要用作分析用户来源，新的Referrer Policy规定了五种 Referrer 策略：No Referrer、No Referrer When Downgrade、Origin Only、Origin When Cross-origin、和 Unsafe URL</div><div class="line">-------------------------------</div><div class="line">User-agent:客户端（浏览器）信息</div><div class="line">·</div><div class="line">Cookie:站点cookie信息，可在客户端和服务端之间来回传递</div><div class="line">·</div><div class="line">Accept:浏览器接收媒体资源类型，*/*表示所有类型；一般有text/plain,text/html,application/json等等</div><div class="line">·</div><div class="line">Accept-Charset:浏览器接收内容字符集，一般是utf-8</div><div class="line">·</div><div class="line">Accept-Encoding:浏览器接收内容的编码方法，如指定是否支持压缩、压缩的方法，一般有gzip,deflate,sdch</div><div class="line">·</div><div class="line">Accept-language:浏览器接收内容的语言，一般有zh-CN,en等</div><div class="line">·</div><div class="line">Allow:设置服务端支持接收哪些HTTP请求方法，如get,post,put等，如果不支持则返回405(Method Not Allowed)</div><div class="line">·</div><div class="line">Authorization:授权信息，当客户端接收到来自服务器的WWW-Authenticate响应时，可以用该头部的身份验证信息给web服务器进行认证,比如说Bearer token认证</div><div class="line">·</div><div class="line">Cache-Control:服务器缓存控制指令。no-cache表示不使用缓存，要求从服务器请求内容；max-age表示只接受Age值小于max-age的内容，即没有过期的请求对象</div><div class="line">-----------------------</div><div class="line">content-length:声明本次回应的数据长度</div><div class="line">·</div><div class="line">Expires:web服务器表明该实体在什么时候过期</div><div class="line">·</div><div class="line">Server:服务器名称信息，比如Nginx、Openrestry等</div><div class="line">·</div><div class="line">Content-Type:web服务器响应的类型，与Accept对应</div></pre></td></tr></table></figure></p>
<p>浏览器发起请求时，会根据头部域字段进行判断是否进行缓存读取，大致流程如下图：</p>
<p><img src="http://onjm2392k.bkt.clouddn.com/renpingjun/wewew.png" alt="浏览器请求缓存判断过程"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTTP协议是WWW服务器和用户请求代理（浏览器）之间通过应答请求模式传输超文本内容（html、css、js、图片、接口数据等）的一种协议。&lt;/p&gt;
&lt;p&gt;HTTP协议经过了从1.0到2.0的发展，HTTP2相比较与HTTP1有以下几个明显的优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li
    
    </summary>
    
    
      <category term="http" scheme="http://renpingjun.cn/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript正则表达式匹配汉字</title>
    <link href="http://renpingjun.cn/2017/10/18/h473djdgs/"/>
    <id>http://renpingjun.cn/2017/10/18/h473djdgs/</id>
    <published>2017-10-18T12:03:00.000Z</published>
    <updated>2018-05-27T02:50:28.321Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-正则汉字匹配现状"><a href="#一-正则汉字匹配现状" class="headerlink" title="一 正则汉字匹配现状"></a>一 正则汉字匹配现状</h2><p>在谷歌搜索「JavaScript 正则表达式匹配汉字」的时候，前几条结果全都是 /[\u4e00-\u9fa5]/。没有人怀疑这个正则表达式有什么问题，那么在 2018 年的今天，让我们站在 Chrome 64 的肩膀上，放飞一下自我。</p>
<p>汉文（Han Script）是汉语、日本语、朝鲜语、韩国语的书写系统中的一种文字（Script），越南语在早期也曾在书写系统中使用汉文[1]。汉字（CJK Ideograph）是汉文的基本单元。各国都对汉字提出了自己的编码标准，Unicode 将这些标准加总在一起进行统一编码，力求实现原标准与 Unicode 编码之间的无损转换。Unicode 从语义（semantic）、抽象字形（abstract shape），具体字形（typeface）三个维度[2]出发，把不同编码标准里「起源相同、本义相同、形状一样或稍异」的汉字赋予相同编码，这些被编码的字符称为中日韩统一表意文字（下文我们提到的「汉字」，如果不加说明，均指代中日韩统一表意文字）。如果把它们全部列举出来写成正则表达式，那么就是技术上完整的匹配汉字的正则表达式了。</p>
<p>正则表达式 /[\u4e00-\u9fa5]/的意思是匹配所有从 U+4E00, cjk unified ideograph-4e00 到 U+9FA5, cjk unified ideograph-9fa5 的字符。这一段区域对应的是 Unicode 1.0.1 就收录进来的中日韩统一表意文字（CJK Unified Ideographs）区块，在 Unicode 3.0 加入扩展 A 区以前，这个正则表达式确实给出了所有汉字的编码。换言之，从1992年到1999年，这个正则表达式确实是正确的，想必这个表达式已经有20年历史了。</p>
<h2 id="二-匹配所有统一表意文字"><a href="#二-匹配所有统一表意文字" class="headerlink" title="二 匹配所有统一表意文字"></a>二 匹配所有统一表意文字</h2><p>然而时光飞逝，Unicode 在2017年6月发布了10.0.0版本。在这20年间，Unicode 添加了许多汉字。比如 Unicode 8.0 添加的 109 号化学元素「鿏（⿰⻐麦）」，其码点是 9FCF，不在这个正则表达式范围中。而如果我们期望程序里的 /[\u4e00-\u9fa5]/可以与时俱进匹配最新的 Unicode 标准，显然是不现实的事情。因此，我们需要换一个思路，写一个无需维护的正则表达式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/\p&#123;Unified_Ideograph&#125;/u</div></pre></td></tr></table></figure></p>
<p>其中 \u是 ECMAScript 2015 定义的正则表达式标志，意味着将表达式作为 Unicode 码点序列。 \p是正在提案阶段的正则表达式 Unicode 属性转义，它赋予了我们根据 Unicode 字符的属性数据[3]构造表达式的能力。 Unified_Ideograph是 Unicode 字符的一个二值属性，对于汉字，其取值为 Yes，否则为 No。因此\p{Unified_Ideograph}匹配所有满足 Unified_Ideograph=yes的 Unicode 字符，而它的底层实现由运行时所依赖的 Unicode 版本决定，开发者不需要知道汉字的具体 Unicode 码点范围。</p>
<h2 id="三-容易混淆的其他-Unicode-属性转义表达式"><a href="#三-容易混淆的其他-Unicode-属性转义表达式" class="headerlink" title="三 容易混淆的其他 Unicode 属性转义表达式"></a>三 容易混淆的其他 Unicode 属性转义表达式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/\p&#123;Ideographic&#125;/u</div></pre></td></tr></table></figure>
<p>这个表达式匹配所有满足 Ideographic=yes的 Unicode 字符。我们先看一下 UAX #44 对这个属性的解释：</p>
<p>Characters considered to be CJKV (Chinese, Japanese, Korean, and Vietnamese) or other siniform (Chinese writing-related) ideographs. This property roughly defines the class of “Chinese characters” and does not include characters of other logographic scripts such as Cuneiform or Egyptian Hieroglyphs.</p>
<p>这个属性表明该字符属于 CJKV 表意文字或者与汉语书写相关的其他表意文字（如西夏文、女书），这个属性粗略地定义了「中文字符」的分类。</p>
<h2 id="四-浏览器兼容性支持"><a href="#四-浏览器兼容性支持" class="headerlink" title="四 浏览器兼容性支持"></a>四 浏览器兼容性支持</h2><p>截至2018年1月，只有 Chrome 64 支持正则表达式 Unicode 属性转义。对于其他浏览器，我们需要用 babel转译插件@babel/plugin-proposal-unicode-property-regex的底层将带有属性转义的正则表达式转为 Unicode 码点正则表达式或者 ES 5 的正则表达式。转译结果的在线演示可以在这里查看，用户可以自己在上面转译其他的 Unicode 属性转义正则表达式。我们在这里列举 /\p{Unified_Ideograph}/u转译成Unicode 码点正则表达式的结果：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">const regex = /\p&#123;Unified_Ideograph&#125;/u;</div><div class="line">// transpiled to ES6:</div><div class="line">const regex =/[\u3400-\u4DB5\u4E00-\u9FEA\uFA0E\uFA0F\uFA11\uFA13\uFA14\uFA1F\uFA21\uFA23\uFA24\uFA27-\uFA29\u&#123;20000&#125;-\u&#123;2A6D6&#125;\u&#123;2A700&#125;-\u&#123;2B734&#125;\u&#123;2B740&#125;-\u&#123;2B81D&#125;\u&#123;2B820&#125;-\u&#123;2CEA1&#125;\u&#123;2CEB0&#125;-\u&#123;2EBE0&#125;]/u;</div></pre></td></tr></table></figure>
<p>该插件还可以使用:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;plugins&quot;: [</div><div class="line">    [&quot;@babel/plugin-proposal-unicode-property-regex&quot;, &#123; &quot;useUnicodeFlag&quot;: false &#125;]</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>配置将表达式转成 ES5 的传统的以字符的 UTF16 表示为序列的字符串，这里不再赘述。</p>
<ul>
<li>input 元素的 pattern 属性</li>
</ul>
<p>在前端技术中，除了JavaScript会用到正则表达式，HTML 里<input>元素的pattern属性也会用到正则表达式。与 JavaScript 相比，pattern不支持设置正则表达式的标志位，因此 HTML 标准中强制规定了 input 元素的 pattern 属性需要施加unicode标志 [6]。目前只有 Chrome 53+, Firefox 遵循了这一标准，其他的浏览器暂未支持。</p>
<p>在 React/Angular/Vue.js 三大前端框架中，Angular 提供了近似于 pattern 的指令 ngPattern。目前ngPattern尚未施加unicode标志 [7]。AngularJS 的 ngPattern directive 仍未施加。</p>
<p>在大部分情况，是否施加unicode标志不会对正则表达式产生语义区别。主要的差别在于，在使用\u{10000}表示 Unicode 码点字符情形，正则表达式/\u{10000}/代表匹配u一万次，/\u{10000}/u匹配字符\u{10000}一次；/./只匹配 BMP 平面的字符，/./u匹配所有平面的字符。</p>
<p>由于 Unicode 属性转义正则表达式依赖于标识位\u，因此下面的用法目前只能在 Chrome 下使用：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;input type=&quot;text&quot; pattern=&quot;\p&#123;Unified_Ideograph&#125;&quot;&gt;</div></pre></td></tr></table></figure>
<p>因此，如果需要兼容其他浏览器，可以使用转译插件的底层库regexpu-core在 js 层转换正则表达式，再把转换结果输送到 HTML 模版中。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">const rewritePattern = require(&quot;regexpu-core&quot;);</div><div class="line">rewritePattern(&apos;\\p&#123;Unified_Ideograph&#125;&apos;, &apos;u&apos;, &#123;</div><div class="line">  &apos;unicodePropertyEscape&apos;: true,</div><div class="line">  &apos;useUnicodeFlag&apos;: false</div><div class="line">&#125;);</div><div class="line">// → &apos;/(?:[\u3400-\u4DB5\u4E00-\u9FEA\uFA0E\uFA0F\uFA11\uFA13\uFA14\uFA1F\uFA21\uFA23\uFA24\uFA27-\uFA29]|[\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0])/&apos;</div></pre></td></tr></table></figure>
<h2 id="五-总结"><a href="#五-总结" class="headerlink" title="五 总结"></a>五 总结</h2><ul>
<li><p>/[\u4e00-\u9fa5]/是错的，不要用二十年前的正则表达式了。</p>
</li>
<li><p>/\p{Unified_Ideograph}/u是正确的，不需要维护，匹配所有汉字。这里\p是 Unicode 属性转义正则表达式。</p>
</li>
<li><p>/\p{Ideographic}/u 和 /\p{Script=Han}/u 匹配了除了汉字以外的其他一些字符，在「汉字匹配正则表达式」这个需求下，是错的。</p>
</li>
<li><p>目前只有 Chrome 支持 Unicode 属性转义正则表达式。对其他环境，使用@babel/plugin-proposal-unicode-property-regex 和 regexpu-core 进行优雅降级。</p>
</li>
</ul>
<p><strong><em> 阅读原文：<a href="https://qianduan.group/posts/5a6ede120cf6b624d2239c8b" target="_blank" rel="external">https://qianduan.group/posts/5a6ede120cf6b624d2239c8b</a> </em></strong></p>
<p><img src="http://onjm2392k.bkt.clouddn.com/renpingjun/vgrefs548hf347hd23ie9ysh23.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一-正则汉字匹配现状&quot;&gt;&lt;a href=&quot;#一-正则汉字匹配现状&quot; class=&quot;headerlink&quot; title=&quot;一 正则汉字匹配现状&quot;&gt;&lt;/a&gt;一 正则汉字匹配现状&lt;/h2&gt;&lt;p&gt;在谷歌搜索「JavaScript 正则表达式匹配汉字」的时候，前几条结果全都
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://renpingjun.cn/tags/JavaScript/"/>
    
      <category term="正则表达式" scheme="http://renpingjun.cn/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript正则表达式匹配身份证号码</title>
    <link href="http://renpingjun.cn/2017/10/17/1f35839j/"/>
    <id>http://renpingjun.cn/2017/10/17/1f35839j/</id>
    <published>2017-10-17T12:03:00.000Z</published>
    <updated>2018-05-27T02:50:21.838Z</updated>
    
    <content type="html"><![CDATA[<p>我们先来看一段正则代码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/(^\d&#123;15&#125;$)|(^\d&#123;17&#125;([0-9]|X)$)/</div></pre></td></tr></table></figure></p>
<p>非常眼熟对不对，这是长时间以来我们匹配身份证号码用的正则表达式，而且在google、百度搜索“身份证 正则”等相关关键字时，无一例外结果都是这个答案。</p>
<p>这段代码验证的情况有两种，一种是15位数字，一种是18位（17位数字+1位数字或“X”），好像没有什么问题，但细究起来其实是不严谨的。比如说“123456789012345”是可以通过这个正则验证的，但它却不是一个身份证号码。</p>
<p>无论是15位还是18位，身份证号码都有一套自己的编码规则，我们只要循着规则，不难写出正确（严谨）的身份证号码正则表达式。</p>
<h2 id="一-从身份证号码编码规则说起"><a href="#一-从身份证号码编码规则说起" class="headerlink" title="一 从身份证号码编码规则说起"></a>一 从身份证号码编码规则说起</h2><h3 id="1-15位身份证号码编码规则"><a href="#1-15位身份证号码编码规则" class="headerlink" title="1 15位身份证号码编码规则"></a>1 15位身份证号码编码规则</h3><p>15位身份证号码是新中国第一代身份证号码，格式如：ABCDEFYYYYMMDDX</p>
<ul>
<li>地址码（ABCDEF）<br>表示登记户口时所在地的行政区划代码（省、市、县），如果行政区划进行了重新划分，同一个地方进行户口登记的可能存在地址码不一致的情况。行政区划代码按GB/T2260的规定执行。</li>
<li>出生日期码（YYYYMMDD）<br>表示该居民的出生年月日，年4位数字，月和日分别用2位数字表示，如19491001，；出生日期码是按GB/T 7408的规定执行的。</li>
<li>顺序码（X）<br>表示同一地址码区域内，同年、同月、同日生的人所编订的顺序号，根据自己身份证的顺序码就可以知道：与我们同年同月同日生的同性至少有多少个，且在我们之前登记户籍的有多少人。身份证顺序码的奇数分配给男性，偶数分配给女性。这就是为什么倒数第二位奇数表示男生，偶数表示女生。</li>
</ul>
<h3 id="2-18位身份证号码编码规则"><a href="#2-18位身份证号码编码规则" class="headerlink" title="2 18位身份证号码编码规则"></a>2 18位身份证号码编码规则</h3><p>1999年我国颁发了第二代居民身份证号，公民身份号码为18位，且终身不变。居民身份证格式如：ABCDEFYYYYMMDDXXXR</p>
<p>同15位的差别在于顺序码加到了3位，并且增加了校验码（R），R之前的17位被称为本体码，R是根据本体码，按照校验码算法(ISO 7064:1983,MOD 11-2校)计算出来的。当我们输入身份号码进行实名认证的时候，根据校验码算法可以初步判断你输入身份证号码格式是否正确。</p>
<p>校验码（R）的算法是：将本体码各位数字乘以对应加权因子并求和，除以11得到余数，根据余数通过校验码对照表查得校验码。</p>
<ul>
<li>加权因子</li>
</ul>
<table>
<thead>
<tr>
<th>位置序号</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
<th>10</th>
<th>11</th>
<th>12</th>
<th>13</th>
<th>14</th>
<th>15</th>
<th>16</th>
<th>17</th>
</tr>
</thead>
<tbody>
<tr>
<td>加权因子</td>
<td>7</td>
<td>9</td>
<td>10</td>
<td>5</td>
<td>8</td>
<td>4</td>
<td>2</td>
<td>1</td>
<td>6</td>
<td>3</td>
<td>7</td>
<td>9</td>
<td>10</td>
<td>5</td>
<td>8</td>
<td>4</td>
<td>2</td>
</tr>
</tbody>
</table>
<ul>
<li>校验码表</li>
</ul>
<table>
<thead>
<tr>
<th>余数</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
<th>10</th>
</tr>
</thead>
<tbody>
<tr>
<td>校验码</td>
<td>1</td>
<td>0</td>
<td>X</td>
<td>9</td>
<td>8</td>
<td>7</td>
<td>6</td>
<td>5</td>
<td>4</td>
<td>3</td>
<td>2</td>
</tr>
</tbody>
</table>
<h3 id="3-应用举例"><a href="#3-应用举例" class="headerlink" title="3 应用举例"></a>3 应用举例</h3><p>某公民的身份证号码是34052419800101001X，</p>
<ul>
<li><p>1 本体码乘以加权因子：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">3*7+4*9+0*10+……0*4+1*2=189</div></pre></td></tr></table></figure>
</li>
<li><p>2 计算求和后除以11的余数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">189%11=2</div></pre></td></tr></table></figure>
</li>
<li><p>3 在检验码中查询余数对应的检验码</p>
</li>
</ul>
<p>余数2所对应的校验码是X，注意X必须大写</p>
<h2 id="二-正则表达式匹配身份证号码"><a href="#二-正则表达式匹配身份证号码" class="headerlink" title="二 正则表达式匹配身份证号码"></a>二 正则表达式匹配身份证号码</h2><p>清楚了身份证号码的编码规则，再根据规则写出正则表达式就简单了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line">isCardNo: function(value) &#123;</div><div class="line">	//验证身份证号方法</div><div class="line">	var area = &#123;</div><div class="line">		11: &quot;北京&quot;,</div><div class="line">		12: &quot;天津&quot;,</div><div class="line">		13: &quot;河北&quot;,</div><div class="line">		14: &quot;山西&quot;,</div><div class="line">		15: &quot;内蒙古&quot;,</div><div class="line">		21: &quot;辽宁&quot;,</div><div class="line">		22: &quot;吉林&quot;,</div><div class="line">		23: &quot;黑龙江&quot;,</div><div class="line">		31: &quot;上海&quot;,</div><div class="line">		32: &quot;江苏&quot;,</div><div class="line">		33: &quot;浙江&quot;,</div><div class="line">		34: &quot;安徽&quot;,</div><div class="line">		35: &quot;福建&quot;,</div><div class="line">		36: &quot;江西&quot;,</div><div class="line">		37: &quot;山东&quot;,</div><div class="line">		41: &quot;河南&quot;,</div><div class="line">		42: &quot;湖北&quot;,</div><div class="line">		43: &quot;湖南&quot;,</div><div class="line">		44: &quot;广东&quot;,</div><div class="line">		45: &quot;广西&quot;,</div><div class="line">		46: &quot;海南&quot;,</div><div class="line">		50: &quot;重庆&quot;,</div><div class="line">		51: &quot;四川&quot;,</div><div class="line">		52: &quot;贵州&quot;,</div><div class="line">		53: &quot;云南&quot;,</div><div class="line">		54: &quot;西藏&quot;,</div><div class="line">		61: &quot;陕西&quot;,</div><div class="line">		62: &quot;甘肃&quot;,</div><div class="line">		63: &quot;青海&quot;,</div><div class="line">		64: &quot;宁夏&quot;,</div><div class="line">		65: &quot;新疆&quot;,</div><div class="line">		71: &quot;台湾&quot;,</div><div class="line">		81: &quot;香港&quot;,</div><div class="line">		82: &quot;澳门&quot;,</div><div class="line">		91: &quot;国外&quot;</div><div class="line">	&#125;</div><div class="line">	var idcard, Y, JYM;</div><div class="line">	var idcard = value.toString();</div><div class="line">	var S, M;</div><div class="line">	var idcard_array = new Array();</div><div class="line">	idcard_array = idcard.split(&quot;&quot;);</div><div class="line">	if(area[parseInt(idcard.substr(0, 2))] == null) return false;</div><div class="line">	switch(idcard.length) &#123;</div><div class="line">		case 15:</div><div class="line">			if((parseInt(idcard.substr(6, 2)) + 1900) % 4 == 0 || ((parseInt(idcard.substr(6, 2)) + 1900) % 100 == 0 &amp;&amp; (parseInt(idcard.substr(6, 2)) + 1900) % 4 == 0)) &#123;</div><div class="line">				ereg = /^[1-9][0-9]&#123;5&#125;[0-9]&#123;2&#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]&#123;3&#125;$/; //测试出生日期的合法性</div><div class="line">			&#125; else &#123;</div><div class="line">				ereg = /^[1-9][0-9]&#123;5&#125;[0-9]&#123;2&#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]&#123;3&#125;$/; //测试出生日期的合法性</div><div class="line">			&#125;</div><div class="line">			if(ereg.test(idcard))</div><div class="line">				//return Errors[0];</div><div class="line">				var res = true;</div><div class="line">			else</div><div class="line">				//return Errors[2];</div><div class="line">				var res = false;</div><div class="line">			return res;</div><div class="line">			break;</div><div class="line">		case 18:</div><div class="line">			if(parseInt(idcard.substr(6, 4)) % 4 == 0 || (parseInt(idcard.substr(6, 4)) % 100 == 0 &amp;&amp; parseInt(idcard.substr(6, 4)) % 4 == 0)) &#123;</div><div class="line">				ereg = /^[1-9][0-9]&#123;5&#125;[1-2][0-9][0-9]&#123;2&#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]&#123;3&#125;[0-9Xx]$/; //闰年出生日期的合法性正则表达式</div><div class="line">			&#125; else &#123;</div><div class="line">				ereg = /^[1-9][0-9]&#123;5&#125;[1-2][0-9][0-9]&#123;2&#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]&#123;3&#125;[0-9Xx]$/; //平年出生日期的合法性正则表达式</div><div class="line">			&#125;</div><div class="line">			if(ereg.test(idcard)) &#123;</div><div class="line">				S = (parseInt(idcard_array[0]) + parseInt(idcard_array[10])) * 7 + (parseInt(idcard_array[1]) + parseInt(idcard_array[11])) * 9 + (parseInt(idcard_array[2]) + parseInt(idcard_array[12])) * 10 + (parseInt(idcard_array[3]) + parseInt(idcard_array[13])) * 5 + (parseInt(idcard_array[4]) + parseInt(idcard_array[14])) * 8 + (parseInt(idcard_array[5]) + parseInt(idcard_array[15])) * 4 + (parseInt(idcard_array[6]) + parseInt(idcard_array[16])) * 2 + parseInt(idcard_array[7]) * 1 + parseInt(idcard_array[8]) * 6 + parseInt(idcard_array[9]) * 3;</div><div class="line">				Y = S % 11;</div><div class="line">				M = &quot;F&quot;;</div><div class="line">				JYM = &quot;10X98765432&quot;;</div><div class="line">				M = JYM.substr(Y, 1);</div><div class="line">				if(M == idcard_array[17])</div><div class="line">					//return Errors[0];</div><div class="line">					var res = true;</div><div class="line">				else</div><div class="line">					//return Errors[3];</div><div class="line">					var res = false;</div><div class="line">			&#125; else</div><div class="line">				//return Errors[2];</div><div class="line">				res = false;</div><div class="line">			return res;</div><div class="line">			break;</div><div class="line">		default:</div><div class="line">			res = false;</div><div class="line">			return res;</div><div class="line">			break;</div><div class="line">	&#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://onjm2392k.bkt.clouddn.com/renpingjun/vgrefs548hf347hd23ie9ysh23.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们先来看一段正则代码:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://renpingjun.cn/tags/JavaScript/"/>
    
      <category term="正则表达式" scheme="http://renpingjun.cn/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL 基本操作指南</title>
    <link href="http://renpingjun.cn/2017/04/29/c19517s2/"/>
    <id>http://renpingjun.cn/2017/04/29/c19517s2/</id>
    <published>2017-04-29T08:59:00.000Z</published>
    <updated>2018-05-26T03:01:56.432Z</updated>
    
    <content type="html"><![CDATA[<p>环境：Linux Ubuntu14.04, MYSQL5.5</p>
<h3 id="1-登录数据库服务器"><a href="#1-登录数据库服务器" class="headerlink" title="1.登录数据库服务器"></a>1.登录数据库服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql -u root -p (默认端口3306)</div><div class="line">·</div><div class="line">mysql -u root -p --protocol=tcp --host=localhost --port=3307 （通过tcp连接管理不同端口的MYSQL）</div><div class="line">·</div><div class="line">mysql -u root -p --socket=/tmp/mysql3307.sock （通过socket套接字连接管理不同端口的MYSQL）</div><div class="line">·</div><div class="line">mysql -u root -p 3306 -h 127.0.0.1 （通过端口和IP管理不同端口的MYSQL）</div></pre></td></tr></table></figure>
<h3 id="2-数据库操作"><a href="#2-数据库操作" class="headerlink" title="2.数据库操作"></a>2.数据库操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">SHOW DATABASES; （显示所有数据库）</div><div class="line">·</div><div class="line">CREATE DATABASE vue_ghs; （创建一个名为vue_ghs的数据库）</div><div class="line">·</div><div class="line">DROP DATABASE vue_ghs; （删除数据库）</div><div class="line">·</div><div class="line">USE vue_ghs; （选择将要操作的数据库）</div><div class="line">·</div><div class="line">SOURCE vue_ghs.sql; （MYSQL导入.sql文件）</div></pre></td></tr></table></figure>
<h3 id="3-表操作"><a href="#3-表操作" class="headerlink" title="3.表操作"></a>3.表操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">SHOW TABLES; （显示所有数据表）</div><div class="line">·</div><div class="line">CREATE TABLE `renpingjun` ( `id` INT( 5 ) UNSIGNED NOT NULL AUTO_INCREMENT , `username` VARCHAR( 20 ) NOT NULL , `password` CHAR( 32 ) NOT NULL , `time` DATETIME NOT NULL , `number` FLOAT( 10 ) NOT NULL , `content` TEXT NOT NULL , PRIMARY KEY ( `id` ) ) ENGINE = MYISAM ; （创建数据表renpingjun：在mysql&gt;后粘贴以下SQL语句，存储引擎为MYISAM，字段id为主键、唯一索引）</div><div class="line">·</div><div class="line">DESCRIBE renpingjun; （查看renpingjun数据表结构）</div><div class="line">·</div><div class="line">SELECT * FROM renpingjun; （从renpingjun数据表中检索所有记录）</div><div class="line">·</div><div class="line">SELECT * FROM renpingjun WHERE username = abc AND number=1 ORDER BY id DESC; （从renpingjun数据表中检索username = abc AND number=1的记录，按字段id降序排序）</div><div class="line">·</div><div class="line">INSERT INTO renpingjun (id, username, password, time, number, content) VALUES (, abc, 123456,</div><div class="line">2017-04-29 14:32:12, 23.41, hello world); （插入信息到renpingjun数据表）</div><div class="line">·</div><div class="line">UPDATE renpingjun SET content = hello china WHERE username = abc; （更新数据表信息）</div><div class="line">·</div><div class="line">UPDATE renpingjun SET content = REPLACE (content, aaa, bbb); （批量替换renpingjun数据表中content字段中的“aaa”为“bbb”）</div><div class="line">·</div><div class="line">DELETE FROM renpingjun; （清空renpingjun数据表）</div><div class="line">·</div><div class="line">DROP TABLE renpingjun; （删除renpingjun数据表）</div><div class="line">·</div><div class="line">REPAIR TABLE renpingjun; （修复损坏的renpingjun数据表）</div></pre></td></tr></table></figure>
<h3 id="4-数据库权限操作"><a href="#4-数据库权限操作" class="headerlink" title="4.数据库权限操作"></a>4.数据库权限操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">GRANT ALL PRIVILEGES ON *.* TO renpingjun@% IDENTIFIED BY 123456; （创建一个具有root权限，可从任何IP登录的用户renpingjun，密码为123456）</div><div class="line">·</div><div class="line">GRANT SELECT , INSERT , UPDATE , DELETE , FILE , CREATE , DROP , INDEX , ALTER , CREATE</div><div class="line">TEMPORARY TABLES , CREATE VIEW , SHOW VIEW , CREATE ROUTINE, ALTER ROUTINE, EXECUTE ON</div><div class="line">*.* TO xiawei@192.168.1.% IDENTIFIED BY 123456; （创建一个具有数据操作、结构操作权限，只能从IP为192.168.1登录的用户xiawei,密码为123456）</div><div class="line">·</div><div class="line">DROP USER xiawei@%; （删除用户xiawei）</div></pre></td></tr></table></figure>
<h3 id="5-登出数据库服务器"><a href="#5-登出数据库服务器" class="headerlink" title="5.登出数据库服务器"></a>5.登出数据库服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">exit;</div></pre></td></tr></table></figure>
<p><img src="http://onjm2392k.bkt.clouddn.com/renpingjun/vgrefs548hf347hd23ie9ysh23.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;环境：Linux Ubuntu14.04, MYSQL5.5&lt;/p&gt;
&lt;h3 id=&quot;1-登录数据库服务器&quot;&gt;&lt;a href=&quot;#1-登录数据库服务器&quot; class=&quot;headerlink&quot; title=&quot;1.登录数据库服务器&quot;&gt;&lt;/a&gt;1.登录数据库服务器&lt;/h3&gt;&lt;fi
    
    </summary>
    
      <category term="数据库" scheme="http://renpingjun.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://renpingjun.cn/tags/mysql/"/>
    
  </entry>
  
</feed>
